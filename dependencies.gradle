static def addRepos(RepositoryHandler handler) {
    handler.google()
    handler.jcenter()
    handler.maven { url 'https://jitpack.io' }
    handler.maven { url 'https://maven.fabric.io/public' }
}

ext.addRepos = this.&addRepos

def build_versions = [:]
build_versions.min_sdk = 21
build_versions.target_sdk = 28
build_versions.build_tools = "28.0.3"
build_versions.compile_sdk = 28
ext.build_versions = build_versions

def versions = [:]
def deps = [:]

def gradle = [:]
versions.android_plugin = "3.2.1"
gradle.android_plugin = "com.android.tools.build:gradle:$versions.android_plugin"
deps.gradle = gradle

def kotlin = [:]
versions.kotlin = "1.2.71"
kotlin.stdlib = "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"
kotlin.plugin = "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
deps.kotlin = kotlin

def arch = [:]
versions.arch = "2.0.0"
arch.lifecycle = "androidx.lifecycle:lifecycle-extensions:$versions.arch"
arch.compiler = "androidx.lifecycle:lifecycle-compiler:$versions.arch"
deps.arch = arch

def navigation = [:]
versions.cicerone = "3.0.0"
navigation.cicerone = "ru.terrakok.cicerone:cicerone:$versions.cicerone"
deps.navigation = navigation

def ui = [:]
versions.constraint_layout = "2.0.0-alpha2"
versions.state_delegator = "1.5"
ui.constraint_layout = "androidx.constraintlayout:constraintlayout:$versions.constraint_layout"
ui.stateDelegator = "com.redmadrobot:state-delegator:$versions.state_delegator"
deps.ui = ui

def support = [:]
versions.androidx = "1.0.0"
support.app_compat = "androidx.appcompat:appcompat:$versions.androidx"
support.recyclerview = "androidx.recyclerview:recyclerview:$versions.androidx"
support.cardview = "androidx.cardview:cardview:$versions.androidx"
support.design = "com.google.android.material:material:$versions.androidx"
support.anotations = "androidx.annotation:annotation:$versions.androidx"
deps.support = support

def rx = [:]
versions.rx_java = "2.1.14"
versions.rx_android = "2.0.2"
rx.java = "io.reactivex.rxjava2:rxjava:$versions.rx_java"
rx.android = "io.reactivex.rxjava2:rxandroid:$versions.rx_android"
deps.rx = rx

def dagger = [:]
versions.dagger = "2.15"
dagger.runtime = "com.google.dagger:dagger:$versions.dagger"
dagger.compiler = "com.google.dagger:dagger-compiler:$versions.dagger"
deps.dagger = dagger

def retrofit = [:]
versions.retrofit = "2.4.0"
retrofit.runtime = "com.squareup.retrofit2:retrofit:$versions.retrofit"
retrofit.rx_adapter = "com.squareup.retrofit2:adapter-rxjava2:$versions.retrofit"
retrofit.gson = "com.squareup.retrofit2:converter-gson:$versions.retrofit"
retrofit.mock = "com.squareup.retrofit2:retrofit-mock:$versions.retrofit"
deps.retrofit = retrofit

def room = [:]
versions.room = "2.0.0-rc01"
room.runtime = "androidx.room:room-runtime:$versions.room"
room.compiler = "androidx.room:room-compiler:$versions.room"
room.rxjava2 = "androidx.room:room-rxjava2:$versions.room"
room.testing = "androidx.room:room-testing:$versions.room"
deps.room = room

def utils = [:]
versions.pretty_logger = "2.2.0"
versions.okhttp_logging_interceptor = "3.9.0"
versions.multidex = "2.0.0"
versions.joda = "2.10"
versions.androidKtx = "1.0.0-rc02"
utils.pretty_logger = "com.orhanobut:logger:$versions.pretty_logger"
utils.joda = "joda-time:joda-time:$versions.joda"
utils.okhttp_logging_interceptor = "com.squareup.okhttp3:logging-interceptor:${versions.okhttp_logging_interceptor}"
utils.multidex = "androidx.multidex:multidex:$versions.multidex"
utils.androidKtx = "androidx.core:core-ktx:$versions.androidKtx"
deps.utils = utils

def test = [:]
versions.jUnitVersion = "4.12"
versions.roboelectric = "3.1.1"
test.junit="junit:junit:$versions.jUnitVersion"
test.roboelectric="org.robolectric:robolectric:$versions.roboelectric"
deps.test = test

ext.deps = deps